kind: Template
apiVersion: v1
metadata:
  name: moon
objects:
  - kind: RoleBinding
    apiVersion: rbac.authorization.k8s.io/v1
    metadata:
      name: edit
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: edit
    subjects:
      - kind: ServiceAccount
        name: default

  - kind: ResourceQuota
    apiVersion: v1
    metadata:
      name: max-moon-sessions
    spec:
      hard:
        pods: ${MOON_PODS}
    scopes: ["NotTerminating"]

  - kind: Service
    apiVersion: v1
    metadata:
      name: moon
      namespace: ${NAMESPACE}
    spec:
      selector:
        app: moon
      ports:
        - name: "moon"
          protocol: TCP
          port: 4444
        - name: "moon-api"
          protocol: TCP
          port: 8888
      type: LoadBalancer

   - apiVersion: v1
     kind: Service
     metadata:
       name: browsers
       namespace: moon
     spec:
       selector:
         moon: browser
       clusterIP: None
       publishNotReadyAddresses: true

  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name: moon
      namespace: ${NAMESPACE}
    spec:
      replicas: 2
      template:
        metadata:
          labels:
            app: moon
        spec:
          containers:
          - name: moon
            image: ${MOON_IMAGE}
            args: ["-namespace", "${NAMESPACE}", "-license-file", "/license/license.key"]
            resources:
              limits:
                cpu: "0.5"
                memory: "512Mi"
            ports:
            - containerPort: 4444
            volumeMounts:
            - name: quota
              mountPath: /quota
              readOnly: true
            - name: config
              mountPath: /config
              readOnly: true
            - name: users
              mountPath: /users
              readOnly: true
            - name: license-key
              mountPath: /license
              readOnly: true
          - name: moon-api
            image: ${MOON_API_IMAGE}
            args: ["-namespace", "${NAMESPACE}", "-license-file", "/license/license.key", "-listen", ":8888"]
            resources:
              limits:
                cpu: "0.5"
                memory: "512Mi"
            ports:
            - containerPort: 8888
            volumeMounts:
            - name: quota
              mountPath: /quota
              readOnly: true
            - name: config
              mountPath: /config
              readOnly: true
            - name: license-key
              mountPath: /license
              readOnly: true
          volumes:
          - name: quota
            configMap:
              name: quota
          - name: config
            configMap:
              name: config
          - name: users
            secret:
              secretName: users
          - name: license-key
            secret:
              secretName: licensekey

  - kind: ConfigMap
    apiVersion: v1
    metadata:
      name: config
      namespace: moon
    data:
      service.json: |
        {
          "images": {
            "videoRecorder": {
              "image": "registry.aerokube.ru/moon/moon-video-recorder:1.4.1"
            },
            "defender": {
              "image": "registry.aerokube.ru/moon/defender:1.4.1"
            },
            "logger": {
              "image": "registry.aerokube.ru/moon/logger:1.4.1"
            }
          }
        }

  - kind: ConfigMap
    apiVersion: v1
    metadata:
      name: quota
      namespace: ${NAMESPACE}
    data:
      browsers.json: |
        {
          "firefox": {
            "default": "75.0",
            "versions": {
              "75.0": {
                "image": "registry.aerokube.ru/browsers/firefox:75.0",
                "port": "4444",
                "path": "/wd/hub"
              }
            }
          },
          "chrome": {
            "default": "81.0",
            "versions": {
              "81.0": {
                "image": "registry.aerokube.ru/browsers/chrome:81.0",
                "port": "4444"
              }
            }
          }
        }

  - kind: Secret
    apiVersion: v1
    metadata:
      name: users
      namespace: ${NAMESPACE}
    stringData:
      users.htpasswd: ""
  - kind: Secret
    apiVersion: v1
    metadata:
      name: licensekey
      namespace: ${NAMESPACE}
    stringData:
      license.key: MG1RSVdpc2Z6YjdQQVZjd2lpei9KMkd1T3dzMTFuL1dlRjVSc3NOMUcxZk9QaUxWa3Q5SnBIakIxa09wWm0vVFJqQ0tsa21xVG1OODVRZnlQbjBjVmRHVWFLampTOFF1a3VLRXRPcEUwbnEySG16QWFQWHRDYTVjMm9jZzZFaUJqeFd5ODE4UFBHZzNCNWpCYXlha3oweFBscFl1RnB0V0U1Q3FwOGl5VDdKTk9abG5aSmlPdnRmZDFvSG1nNnVwVXBLV2E4RmYwWHcreERIR29ZTE1XTldPb1hvT2ZCUnZpcDhPWW05a1FqN0hBWWVOYUtLT1lPWlVJa1dsb1gxdjNOT1htTFpZalhsQ3h1Q3V6NWhiQjIwSjVIY0JTYnZybm9zYm14RXFkSFpQWVBKWUlKTzZvVlBnODhQeFErZ1EyTk5sWG82TC9XeXU3aisrNU0rSEdPcXlOSEdlNGx4Zm1nNVhjMWlnNkN1OCtNSVVYRzNqUllqOUY4ZHdReWpSbFNMNmFpL2dRQnc3TzY0U0lwdVF2d29jYi9kVzFSYWFRVkd3ZXYrOVdING8zRWRrYkVONUhRTmQ2MUxsUnFNdmtKeWVHV21tVlVUZ2dsMDRsTFFLTmZNVG81L2JVakNBMGhNeER5VHNJdmVRRGFMMklvTWpvcFk4VERlK1U2bUJvUDVxNVYrcCtDQVhjbjYxQlRaUVp0bmNqL0JBVkdNOEZ4NW9rWHRYSVAxUkY0a1VCckZVTDFyTWF1VkZqSk5xU1pLT293dUpMTTg2SEZ0Sld0eUlRK3ZZZm1pZU0xM292MnVleDBoRlhRdFkvMkt1dUhhN3dKV2pFT0pqaEVzTjhXSy82ZlFFbi9EQzcrNkw3NzhlbmVVZ2lLZ3VFbjlMMXZMYVZ5VWtQaWc9O2V5SnNhV05sYm5ObFpTSTZJa1JsWm1GMWJIUWlMQ0p3Y205a2RXTjBJam9pVFc5dmJpSXNJbTFoZUZObGMzTnBiMjV6SWpvMGZRPT0=

parameters:
- name: NAMESPACE
  displayName: Namespace
  description: Namespace where the Moon is running
  value: moon
  required: true

- name: MOON_IMAGE
  displayName: Moon docker image
  description: Name of the image to be used.
  value: registry.aerokube.ru/moon/moon:1.4.1
  required: true

- name: MOON_API_IMAGE
  displayName: Moon-API docker image
  description: Name of the image to be used.
  value: registry.aerokube.ru/moon/moon-api:1.4.1
  required: true

- name: MOON_PODS
  displayName: Max moon pods in project
  description: Specify max moon pods for project (4 free slots + 2 Moon replicas = 6).
  value: '6'
  required: true
